map<int,int>duplicate(int* arr,int n)
{
    map<int,int>m;
    for(int i=0;i<n;i++)
    {
        m[arr[i]]++;
    }
    for(auto i=m.begin();i!=m.end();i++)
    {
        if(i->second>1)
        cout<<i->first<<" ";
    }
}
int main()
{
    int arr[]={5,7,6,6,3,6,3,3};
    duplicate(arr,8);
    return 0;
}*/
vector<vector<int>>pairSum(int arr[],int n,int sum)
{
    vector<vector<int>>vec;
    for(int i=0;i<n;i++)
    {
            vector<int>temp;
        for(int j=i+1;j<n;j++)
        {
            if((arr[i]+arr[j])==sum)
            {
            temp.push_back(min(arr[i],arr[j]));
            temp.push_back(max(arr[i],arr[j]));
            vec.push_back(temp);
            }
        }
    }
    //sort(vec.begin(),vec.end());
    return vec;
}
int main()
    {
    int arr[]={2,-2,3,1,-3,4,-4};
    vector<vector<int>>v=pairSum(arr,7,0);
    for(int i=0;i<v.size();i++)
    {
        for(int j=0;j<v[i].size();j++)
        {
            cout<<v[i][j]<<" ";
        }
    }
    return 0;
}
