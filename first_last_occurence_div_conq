int first_occurence(int *arr,int n,int x)
{
    int high=n-1,low=0;
    int first=-1,mid;
    while(low<=high)
    {
        mid=(high+low)/2;
        if(arr[mid]==x)
        {
            first=mid;
            high=mid-1;
        }
        else if(arr[mid]>x)
        {
            high=mid-1;
        }
        else
        low=mid+1;
    }
    return first;
}
int last_occurence(int *arr,int n,int x)
{
    int high=n-1,low=0;
    int last=-1,mid;
    while(low<=high)
    {
        mid=(low+high)/2;
        if(arr[mid]==x)
        {
            last=mid;
            low=mid+1;
        }
        else if(arr[mid]<x)
        {
            low=mid+1;
        }
        else
        {
            high=mid-1;
        }
    }
    return last;
}
int main()
{
    int arr[]={1,2,2,3,3,3,4,4,4,4};
    int f=first_occurence(arr,10,3);
    int l=last_occurence(arr,10,3);
    cout<<f<<" "<<l;
    return 0;
}
